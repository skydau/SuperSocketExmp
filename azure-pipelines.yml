# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  version: '0.1.0.0'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/target:publish'


- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\\WpfApp1\\bin\\$(BuildConfiguration)\\app.publish'
    Contents: '**\\**'
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: '$(System.TeamProject)-$(Build.BuildNumber)'
    publishLocation: 'Container'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    
    script: |
      # Write your PowerShell commands here.
      $ProductVersion=(Get-Item $(Build.SourcesDirectory)\WpfApp1\bin\$(BuildConfiguration)\app.publish\WpfApp1.exe).VersionInfo.ProductVersion
      Write-Host "##vso[task.setvariable variable=ProductVersion]$ProductVersion"
      Write-Host "productVersion =" $env:ProductVersion
    errorActionPreference: 'continue'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # Write your PowerShell commands here.
      Write-Host "version=" $env:ProductVersion

